# PLEASE READ THE MAN PAGE BEFORE EDITING THIS FILE!
# http://opensource.conformal.com/cgi-bin/man-cgi?spectrwm
# NOTE: all colors in this file are in hex! see XQueryColor for examples

# workspace_limit	= 22
# focus_mode		= default
# focus_close		= previous
# focus_close_wrap	= 1
# focus_default		= last
# spawn_position		= next

# window decoration
# border_width		= 1
# color_focus		= orange
# color_unfocus		= rgb:88/88/88

# Remove window border when bar is disabled and there is only one window in workspace
# disable_border		= 1

# bar settings
# bar_enabled		= 1
# bar_border_width	= 1
# bar_border[1]		= rgb:00/80/80
# bar_border_unfocus[1]	= rgb:00/40/40
# bar_color[1]		= black
# bar_font_color[1]	= rgb:a0/a0/a0
# bar_font		= -*-profont-*-*-*-*-12-*-*-*-*-*-*-*
bar_font = Terminus:style=Regular:pixelsize=12:antialias=true
# bar_action		= baraction.sh
bar_action          = conky
bar_justify	    	= left
bar_format  		= +I +S +F +5<+D +5<+W +200<+A
# bar_at_bottom		= 1
# stack_enabled		= 1
clock_enabled		= 0
# clock_format		= %a %b %d %R %Z %Y
# region_padding	= 0
# tile_gap		= 0
# title_name_enabled	= 0
# title_class_enabled	= 0
# window_name_enabled	= 0
# verbose_layout		= 1
# urgent_enabled		= 1

# Spawn Applications
# spawn_position	= last
program[term]		= gnome-terminal
program[ide] 		= ~/bin/idea
# program[screenshot_all]	= screenshot.sh full
# program[screenshot_wind]	= screenshot.sh window
# program[lock]		= xlock
# program[initscr]	= initscreen.sh
# program[menu]		= dmenu_run -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_border -sf $bar_color

# dialog box size ratio .3 >= r < 1
# dialog_ratio		= 0.6

# Split a non-Xrandr dual head setup into one region per monitor
# (non-standard driver-based multihead is not seen by spectrwm)
# region		= screen[1]:1280x1024+0+0
# region		= screen[1]:1280x1024+1280+0

# Launch applications in a workspace of choice
# autorun		= ws[1]:xterm
# autorun		= ws[2]:xombrero http://www.openbsd.org
autorun         = ws[5]:ide
autorun         = ws[6]:chromium

# workspace layout
# layout		= ws[1]:4:0:0:0:vertical
# layout		= ws[2]:0:0:0:0:horizontal
layout		= ws[3]:4:0:0:0:vertical_flip
layout		= ws[4]:0:0:0:0:horizontal_flip
layout		= ws[5]:0:0:0:0:fullscreen
layout		= ws[6]:0:0:0:0:fullscreen

# mod key, (windows key is Mod4) (apple key on OSX is Mod2)
modkey = Mod4

# Clear key bindings and load new key bindings from the specified file.
# This allows you to load pre-defined key bindings for your keyboard layout.
# keyboard_mapping = ~/.spectrwm_us.conf

# quirks
# remove with: quirk[class:name] = NONE
# quirk[MPlayer:xv]			= FLOAT + FULLSCREEN + FOCUSPREV
# quirk[OpenOffice.org 2.4:VCLSalFrame]	= FLOAT
# quirk[OpenOffice.org 3.0:VCLSalFrame]	= FLOAT
# quirk[OpenOffice.org 3.1:VCLSalFrame]	= FLOAT
# quirk[Firefox-bin:firefox-bin]		= TRANSSZ
# quirk[Firefox:Dialog]			= FLOAT
# quirk[Gimp:gimp]			= FLOAT + ANYWHERE
# quirk[XTerm:xterm]			= XTERM_FONTADJ
# quirk[xine:Xine Window]			= FLOAT + ANYWHERE
# quirk[Xitk:Xitk Combo]			= FLOAT + ANYWHERE
# quirk[xine:xine Panel]			= FLOAT + ANYWHERE
# quirk[Xitk:Xine Window]			= FLOAT + ANYWHERE
# quirk[xine:xine Video Fullscreen Window] = FULLSCREEN + FLOAT
# quirk[pcb:pcb]				= FLOAT

# EXAMPLE: define firefox program and bind to key
# program[firefox]	= firefox http://spectrwm.org/
# bind[firefox]		= MOD+Shift+b
# Key bindings for French (fr) keyboards
# unbind with: bind[] = <keys>
bind[cycle_layout]	= MOD+space
bind[flip_layout]	= MOD+Shift+backslash
bind[stack_reset]	= MOD+Shift+space
bind[master_shrink]	= MOD+h
bind[master_grow]	= MOD+l
bind[master_add]	= MOD+comma
bind[master_del]	= MOD+semicolon
bind[stack_inc]		= MOD+Shift+comma
bind[stack_dec]		= MOD+Shift+semicolon
bind[swap_main]		= MOD+Return
bind[focus_next]	= MOD+j
bind[focus_prev]	= MOD+k
bind[swap_next]		= MOD+Shift+j
bind[swap_prev]		= MOD+Shift+k
bind[term]		= MOD+Shift+Return
bind[menu]		= MOD+p
bind[quit]		= MOD+Shift+q
bind[restart]		= MOD+q
bind[focus_main]	= MOD+m
bind[ws_1]		= MOD+ampersand
bind[ws_2]		= MOD+eacute
bind[ws_3]		= MOD+quotedbl
bind[ws_4]		= MOD+apostrophe
bind[ws_5]		= MOD+parenleft
bind[ws_6]		= MOD+section
bind[ws_7]		= MOD+egrave
bind[ws_8]		= MOD+exclam
bind[ws_9]		= MOD+ccedilla
bind[ws_10]		= MOD+agrave
bind[ws_next]		= MOD+Right
bind[ws_prev]		= MOD+Left
bind[ws_next_all]	= MOD+Up
bind[ws_prev_all]	= MOD+Down
bind[ws_prior]		= MOD+a
bind[mvws_1]		= MOD+Shift+ampersand
bind[mvws_2]		= MOD+Shift+eacute
bind[mvws_3]		= MOD+Shift+quotedbl
bind[mvws_4]		= MOD+Shift+apostrophe
bind[mvws_5]		= MOD+Shift+parenleft
bind[mvws_6]		= MOD+Shift+section
bind[mvws_7]		= MOD+Shift+egrave
bind[mvws_8]		= MOD+Shift+exclam
bind[mvws_9]		= MOD+Shift+ccedilla
bind[mvws_10]		= MOD+Shift+agrave
bind[rg_1]		= MOD+KP_End
bind[rg_2]		= MOD+KP_Down
bind[rg_3]		= MOD+KP_Next
bind[rg_4]		= MOD+KP_Left
bind[rg_5]		= MOD+KP_Begin
bind[rg_6]		= MOD+KP_Right
bind[rg_7]		= MOD+KP_Home
bind[rg_8]		= MOD+KP_Up
bind[rg_9]		= MOD+KP_Prior
bind[rg_next]		= MOD+Shift+Right
bind[rg_prev]		= MOD+Shift+Left
bind[mvrg_1]		= MOD+Shift+KP_End
bind[mvrg_2]		= MOD+Shift+KP_Down
bind[mvrg_3]		= MOD+Shift+KP_Next
bind[mvrg_4]		= MOD+Shift+KP_Left
bind[mvrg_5]		= MOD+Shift+KP_Begin
bind[mvrg_6]		= MOD+Shift+KP_Right
bind[mvrg_7]		= MOD+Shift+KP_Home
bind[mvrg_8]		= MOD+Shift+KP_Up
bind[mvrg_9]		= MOD+Shift+KP_Prior
bind[bar_toggle]	= MOD+b
bind[focus_next]	= MOD+Tab
bind[focus_prev]	= MOD+Shift+Tab
bind[wind_kill]		= MOD+Shift+x
bind[wind_del]		= MOD+x
bind[float_toggle]	= MOD+t
bind[version]		= MOD+Shift+v
bind[iconify]		= MOD+w
bind[uniconify]		= MOD+Shift+w
bind[raise_toggle]	= MOD+Shift+r
bind[button2]		= MOD+v
bind[width_shrink]	= MOD+minus
bind[width_grow]	= MOD+equal
bind[height_shrink]	= MOD+Shift+minus
bind[height_grow]	= MOD+Shift+equal
bind[move_left]		= MOD+ugrave
bind[move_right]	= MOD+asterisk
bind[move_up]		= MOD+Shift+ugrave
bind[move_down]		= MOD+Shift+asterisk
bind[name_workspace]	= MOD+Shift+slash
bind[search_workspace]	= MOD+slash
bind[search_win]	= MOD+f
bind[ide] = MOD+i
